version: '3.3'


services:
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn jwtauth.wsgi:application --bind 0.0.0.0:8001
    volumes:
      - static_volume:/home/app/web/staticfiles
      - tunnel_volume:/home/app/web/tunnel
    expose:
      - 8001
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - tunnel_volume:/home/app/web/tunnel
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
  redis:
    image: redis:alpine
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A jwtauth worker -l info
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - ./.env.prod
    depends_on:
      - redis
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A jwtauth beat -l info
    volumes:
      - ./backend/:/usr/src/app/
    env_file:
      - ./.env.prod
    depends_on:
      - redis

volumes:
  postgres_data:
  static_volume:
  tunnel_volume:
  certs:
  html:
  vhost:
  acme:
